const formBuilder={buildForm:e=>{if("object"!=typeof(e=e||{})||null==e)return console.error("options is not a valid object"),null;if(e.fieldsets=e.fieldsets||[],!Array.isArray(e.fieldsets))return console.error("options.fieldset is not an array"),null;if(e.attributes=e.attributes||{},"object"!=typeof e.attributes||null==e.attributes)return console.error("options.attributes is not a valid object"),null;const t=document.createElement("form"),r=new Date;if(t.id=r.getTime(),e.submit){if("[object Function]"!=={}.toString.call(e.submit))return void console.error("options.submit is not a valid function");document.addEventListener("submit",r=>{r.target&&r.target.id===t.id&&e.submit(r)})}return Object.keys(e.attributes).forEach(r=>{formBuilder.isValidFormAttribute(r)?t.setAttribute(r,e.attributes[r]):console.warn(`'${r}' is an invalid form attribute.`)}),e.fieldsets.forEach(e=>{const r=formBuilder.buildFieldset(e);r&&t.append(r)}),t},buildDatalist:e=>{if("object"!=typeof e||null==e)return null;if(!e.hasOwnProperty("id"))return console.error("datalist is missing the required property 'id'"),null;if(!e.hasOwnProperty("values"))return console.error("datalist is missing the required property 'values'"),null;if(!Array.isArray(e.values))return console.error("datalist.values is not an array"),null;const t=document.createElement("datalist");return t.id=e.id,e.values.forEach(e=>{const r=document.createElement("option");r.value=e,t.append(r)}),t},buildFieldset:e=>{if("object"!=typeof e||null==e)return console.error("fieldset is not a valid object"),null;if(e.fields=e.fields||[],!Array.isArray(e.fields))return console.error("fieldset.fields is not an array"),null;const t=document.createElement("fieldset");if(e.legend)if("[object String]"!==Object.prototype.toString.call(e.legend))console.warn("fieldset.legend is not a string");else{const r=document.createElement("legend");r.innerHTML=e.legend,t.append(r)}return e.fields.forEach(e=>{const r=document.createElement("div");r.setAttribute("class","mb-3");let i="text";if(formBuilder.isValidFieldType(e)?i=e.type:void 0!==e.type&&console.warn(`${e.type} is not a valid input type. Defaulting to text.`),e.label)if("[object String]"!==Object.prototype.toString.call(e.label))console.warn("field.label is not a string");else{let t=null;e.attributes&&e.attributes.id&&(t=e.attributes.id);const i=formBuilder.buildLabel(e.label,t);i&&r.append(i)}const n=formBuilder.buildInput(e,i);if(n&&r.append(n),e.hasOwnProperty("datalist")&&"object"==typeof e.datalist&&null!==e.datalist){const t=formBuilder.buildDatalist(e.datalist);t&&r.append(t)}t.append(r)}),t},buildInput:(e,t)=>{if("object"!=typeof e||null==e)return null;if("[object String]"!==Object.prototype.toString.call(t))return null;if("select"===t)return formBuilder.buildSelect(e);const r=document.createElement("input");r.setAttribute("type",t);const i=Object.keys(e.attributes);return i.forEach(i=>{formBuilder.isValidInputAttribute(t,i)?r.setAttribute(i,e.attributes[i]):console.warn(`'${i}' is an invalid attribute for ${t}.`)}),(i.indexOf("class")<0||i.class.indexOf("form-control")<0)&&r.classList.add("form-control"),r},buildLabel:(e,t=null)=>{if("[object String]"!==Object.prototype.toString.call(e))return null;const r=document.createElement("label");return r.setAttribute("class","form-label"),r.innerHTML=e,t&&r.setAttribute("for",t),r},buildOption:e=>{if("[object String]"===Object.prototype.toString.call(e)){const t=document.createElement("option");return t.setAttribute("value",e),t.innerHTML=e,t}if("object"==typeof e){const t=document.createElement("option"),r=Object.keys(e);if(r.indexOf("optgroup")>-1){const t=Object.keys(e.optgroup);if(t.indexOf("label")<0)return void console.error("'optgroup' requires a 'label' attribute.");const r=document.createElement("optgroup");if(r.setAttribute("label",e.optgroup.label),t.indexOf("options")>-1){if(!Array.isArray(e.optgroup.options))return console.error("'optgroup' options is invalid. Expected type is an array."),null;e.optgroup.options.forEach(e=>{const t=formBuilder.buildOption(e);t&&r.append(t)})}return r}return r.indexOf("text")>-1&&(t.innerHTML=e.text),r.indexOf("value")>-1&&t.setAttribute("value",e.value),t}return console.error("'option' is invalid. Expected type is string or object."),null},buildSelect:e=>{const t=Object.keys(e.attributes);if(t.indexOf("options")<0)return console.error("'select' types must have an 'options' attribute."),null;if(!Array.isArray(e.attributes.options))return console.error("'select' types must have an 'options' attribute that is an array."),null;const r=document.createElement("select");return t.forEach(t=>{"options"!==t&&(formBuilder.isValidInputAttribute("select",t)?r.setAttribute(t,e.attributes[t]):console.warn(`'${t}' is an invalid attribute for ${fieldType}.`))}),e.attributes.options.forEach(e=>{const t=formBuilder.buildOption(e);t&&r.append(t)}),(t.indexOf("class")<0||t.class.indexOf("form-select")<0)&&r.classList.add("form-select"),r},isValidFieldType:e=>{if("object"!=typeof e||null==e||!e.hasOwnProperty("type"))return!1;return["checkbox","color","date","datetime-local","email","file","hidden","month","number","password","radio","range","search","select","tel","text","time","url","week"].indexOf(e.type)>-1},isValidFormAttribute:e=>{if("[object String]"!==Object.prototype.toString.call(e))return!1;return["accept","accept-charset","accesskey","action","autocapitalize","autocomplete","autofocus","class","contenteditable","context-menu","dir","draggable","enctype","enterkeyhint","exportparts","hidden","id","inputmode","is","itemid","itemprop","itemref","itemscope","itemtype","lang","method","name","nonce","novalidate","part","rel","slot","spellcheck","style","tabindex","target","title","translate"].indexOf(e)>-1||e.indexOf("data-")>0&&e.length>5},isValidInputAttribute:(e,t)=>{if("[object String]"!==Object.prototype.toString.call(t))return!1;if(["accesskey","autocapitalize","autocomplete","autofocus","class","contenteditable","context-menu","dir","disabled","draggable","enterkeyhint","exportparts","form","hidden","id","inputmode","is","itemid","itemprop","itemref","itemscope","itemtype","lang","list","name","nonce","part","readonly","required","slot","spellcheck","style","tabindex","title","translate","value"].indexOf(t)>-1)return!0;if(t.indexOf("data-")>0&&t.length>5)return!0;if("checkbox"===e){return["checked"].indexOf(t)>-1}if("color"===e){return["list"].indexOf(t)>-1}if("date"===e){return["list","max","min","readonly","required","step"].indexOf(t)>-1}if("datetime-local"===e){return["list","max","min","readonly","required","step"].indexOf(t)>-1}if("email"===e){return["list","readonly","required"].indexOf(t)>-1}if("file"===e){return["accept","capture","multiple","required"].indexOf(t)>-1}if("hidden"===e)return!1;if("month"===e){return["list","max","min","readonly","required","step"].indexOf(t)>-1}if("number"===e){return["max","min","required","step"].indexOf(t)>-1}if("password"===e){return["maxlength","minlength","readonly","required","pattern","placeholder","size"].indexOf(t)>-1}if("radio"===e){return["checked"].indexOf(t)>-1}if("range"===e){return["list"].indexOf(t)>-1}if("search"===e){return["dirname","list","maxlength","minlength","placeholder","readonly","required"].indexOf(t)>-1}if("select"===e);if("tel"===e){return["list","maxlength","minlength","pattern","placeholder","readonly","required","size"].indexOf(t)>-1}if("text"===e){return["dirname","list","maxlength","minlength","pattern","placeholder","readonly","required","size"].indexOf(t)>-1}if("time"===e){return["list","max","min","readonly","required","step"].indexOf(t)>-1}if("url"===e){return["list","maxlength","minlength","placeholder","readonly","required"].indexOf(t)>-1}if("week"===e){return["list","max","min","readonly","required","step"].indexOf(t)>-1}return!1}};
